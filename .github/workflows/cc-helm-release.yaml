name: Helm Release
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

jobs:
  get_helm:
    runs-on: ubuntu-latest
    outputs:
      changes_detected: ${{ steps.compare.outputs.changes_detected }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 5
          token: ${{ secrets.ACCESS_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Clone cinco-cloud repository
        run: |
          git clone --filter=blob:none --sparse https://gitlab.com/scce/cinco-cloud.git
          cd cinco-cloud
          git sparse-checkout set infrastructure
          echo "Cinco-cloud repository cloned successfully with sparse checkout on infrastructure"

      - name: List directories for debugging
        run: |
          echo "Current directory: $(pwd)"
          echo "Content of current directory:"
          ls -la
          echo "Content of helm directory (if exists):"
          ls -la helm || echo "Helm directory doesn't exist"
          echo "Content of cinco-cloud/infrastructure/helm:"
          ls -la cinco-cloud/infrastructure/helm || echo "Path doesn't exist"

      - name: Compare helm directories
        id: compare
        run: |
          current_dir=$(pwd)
          if [ ! -d "${current_dir}/helm" ]; then
            echo "Local helm directory doesn't exist. Will create it."
            echo "SOURCE_EXISTS=false" >> $GITHUB_OUTPUT
            echo "changes_detected=true" >> $GITHUB_OUTPUT
          elif [ ! -d "${current_dir}/cinco-cloud/infrastructure/helm" ]; then
            echo "Source helm directory doesn't exist. Cannot proceed with comparison."
            echo "SOURCE_EXISTS=false" >> $GITHUB_OUTPUT
            echo "changes_detected=false" >> $GITHUB_OUTPUT
            exit 1
          else
            echo "Both directories exist. Comparing..."
            echo "SOURCE_EXISTS=true" >> $GITHUB_OUTPUT
            git diff --no-index --stat "${current_dir}/helm" "${current_dir}/cinco-cloud/infrastructure/helm" || true
            
            # Store the result of git diff in a variable to avoid immediate exit
            git diff --no-index --quiet "${current_dir}/helm" "${current_dir}/cinco-cloud/infrastructure/helm" || DIFF_RESULT=$?
            
            if [ "${DIFF_RESULT:-0}" -eq 0 ]; then
              echo "No changes detected between directories"
              echo "changes_detected=false" >> $GITHUB_OUTPUT
            else
              echo "Changes detected between directories"
              echo "changes_detected=true" >> $GITHUB_OUTPUT
            fi
          fi
        shell: bash
        continue-on-error: true

      - name: Update helm directory if changes detected
        if: steps.compare.outputs.changes_detected == 'true' && steps.compare.outputs.SOURCE_EXISTS == 'true'
        run: |
          current_dir=$(pwd)
          echo "Backup current helm directory (if it exists)"
          [ -d "${current_dir}/helm" ] && cp -r "${current_dir}/helm" "${current_dir}/helm_backup"

          echo "Overwriting local helm directory"
          rm -rf "${current_dir}/helm"
          cp -r "${current_dir}/cinco-cloud/infrastructure/helm" "${current_dir}/helm"
          echo "Helm directory has been updated"

          echo "Showing diff between backup and new helm (if backup exists)"
          [ -d "${current_dir}/helm_backup" ] && git diff --no-index "${current_dir}/helm_backup" "${current_dir}/helm" || true

      - name: Commit and push changes
        if: steps.compare.outputs.changes_detected == 'true'
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add helm/
          git commit -m "Update helm directory from cinco-cloud"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        continue-on-error: false

      - name: Cleanup
        run: |
          rm -rf "${PWD}/cinco-cloud"
          [ -d "${PWD}/helm_backup" ] && rm -rf "${PWD}/helm_backup"
          echo "Cleanup completed"

  release:
    needs: get_helm
    if: needs.get_helm.outputs.changes_detected == 'true'
    runs-on: ubuntu-latest
    env:
      GITHUB_USERNAME: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.repository }}
      CHART_PATH: ./helm

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 5

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Add Helm repositories for dependencies
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add codecentric https://codecentric.github.io/helm-charts

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.6.0
        env:
          CR_TOKEN: "${{ secrets.ACCESS_TOKEN }}"